from Crypto.Util.number import long_to_bytes as l2b , bytes_to_long as b2l
from math import gcd

e1 = 0x10001
e2 = 0x8001

us = [1,0]
vs = [0,1]

u = 0
v = 0

def extended_euclidean_recursive(a, b):

    global step, us, vs
    global u, v

    if b == 0:

        u = us[0]
        v = vs[0]
        return


    quotient = a // b
    remainder = a % b


    new_dividend = b
    new_divisor  = remainder


    tmp = us[1]
    us[1] = -us[1] * quotient + us[0]
    us[0] = tmp

    tmp = vs[1]
    vs[1] = -vs[1] * quotient + vs[0]
    vs[0] = tmp

    extended_euclidean_recursive(new_dividend, new_divisor)



c1 = 4936633143250099145681291328210001176670359282546365786292865384622623361917110615562758660249052523031506088031700534616606749381625728677237156077617826946875709884450395542780430312659290677772295937476148531787640370697669307849964423347138244267351336993740071512677413967434174012186875518514690404901438236513973973395253840690000166777131214571393320611453097925692591851223326058542960514875484643852157917652871230480556241497368576832917365259103114474725832240988095092805553314611077752110183073117538171055377471224283460770171715772867976004611438041214829527591840481131799601637619379905899583860712
c2 = 4249331536346418460740685788906543925055782403358018301375515791080675882438975807411393426018555834858225200534436826327143112782412976181064308114143610230808152454979956336163181387394297190117506455826589435279580099443952129127333797498819113173051369150785544385865084642580220593149922403491429455092325552294004240140132984526281327416220424446699283709195243151544057883172103044629176938001704498969174450112983641950977449501500123793579066569108384601438382737438759665028964888855650246036617753485994755112223716040976552625303149225846444715069544294992357019251748194377109635699409363098856124503699
c3 = 4787730241430407816296391985321087885201370459144782639526466882754388923528184628791272849631052410285220886389167214674630256805522835914688042548573626544377485769841886945444459876619789728367069642352268475748536583963023522112592993980785323816295341827344428122526603444607716141518774871446218667618421223737290165550770412688789619499529376265486836452146361577425118214998254432061719598918843214075420099737330174389738219425742513859924405512134177840243888506903615520834351259404535422900496211231416550898788627764973097843838005700761898234670278519963815795607630007649490013904165159258781137615552
c4 = 113853085592314229610057343788641880655891250427192578969753251544147449953199573591088659415009844978594734104944672086567536305628603582050894135670233009762019371733407446723867335589702887825100467744887937813587982148481739185877044985898927930604908042166328371077554586238105449762553659899420117810500522089687710757086460435245873020822270761629087884311667866993927962976808946115928598470754875980383790845489200805783304924769488036699713713161371066099847782788173089390687106687733633630013935758733014765989697270620709766398298734385710754514139112019541573165601226954169390363781943939505248469355

m1 = b2l(b'There were a mysterious underground cemetery found in Tabriz about 10 years ago near Blue Mosque while worker were digging in nearby locations')
m2 = b2l(b'It is an unknown cemetry which no historical records have registered it so far and it still remains a mystery for everyone. Can you help recover the secrets behind it?')


n = gcd(m1**3 - c1, m2**3 - c2)
print(f"Recovered Modulus n : {n}")

extended_euclidean_recursive(e1, e2)
print(f"[+] u,v of a({e1}) , b({e2}) is {u} , {v}")

m = pow(c3, u, n) * pow(c4, v, n) % n
flag = l2b(m)
print(flag)